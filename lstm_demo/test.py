import tensorflow as tf
import numpy as np
import os

cur_path = os.getcwd()
    
with tf.Session() as sess:
  new_saver = tf.train.import_meta_graph(cur_path + "/model.meta")
  new_saver.restore(sess, tf.train.latest_checkpoint("./"))
  
  graph = tf.get_default_graph()
  x = graph.get_tensor_by_name("x:0")
  y = graph.get_tensor_by_name("y:0")
  
  random_x = np.array([[[ 0.88728452, 0.37361084, -0.98521175, -0.17134117],
                      [ 0.96693676,  0.41329656, -0.98386991, -0.17888544],
                      [ 0.99780603,  0.33591911, -0.98386991, -0.17888544],
                      [ 0.99999038,  0.39470008, -0.98386991, -0.13598002],
                      [ 0.99370813,  0.41329656, -0.98639392, -0.11729494],
                      [ 0.89994182,  0.50444818, -0.98386991, -0.13402569],
                      [ 0.78191271,  0.46495872, -0.98386991, -0.13402569],
                      [ 0.68368556,  0.48900576, -0.98233857, -0.14426544],
                      [ 0.73564061,  0.55614139, -0.98386991, -0.13402569],
                      [ 0.81067923,  0.52624414, -0.98386991, -0.13402569],
                      [ 0.97214262,  0.41329656, -0.96862454, -0.13402569],
                      [ 1.,  0.41826625, -0.98521175, -0.12642828],
                      [ 1.,  0.43810392, -0.98521175, -0.12642828],
                      [ 0.99705449, 0.4472136,  -0.98521175, -0.12642828],
                      [ 0.97515319,  0.47907739, -0.96862454, -0.13402569],
                      [ 0.88085563,  0.46388662, -0.98386991, -0.13402569],
                      [ 0.78935222,  0.48677485, -0.98386991, -0.13402569],
                      [ 0.81067923,  0.45541269, -0.98386991, -0.17888544],
                      [ 0.89403559,  0.49972245, -0.98521175, -0.17134117],
                      [ 0.98364749,  0.41329656, -0.96862454, -0.17888544],
                      [ 0.99817206, 0.41329656, -0.98521175, -0.17134117],
                      [ 0.99227788, 0.37729689, -0.98639392, -0.16439899],
                      [ 0.99895565,  0.41329656, -0.98639392, -0.16439899],
                      [ 0.99680256,  0.41329656, -0.98639392, -0.11729494],
                      [ 0.94688159,  0.43318529, -0.98521175, -0.12642828],
                      [ 0.91250932,  0.46757407, -0.96979151, -0.17888544],
                      [ 0.89036211,  0.47239736, -0.96862454, -0.13402569],
                      [ 0.89230777,  0.46757407, -0.9568649,  -0.17711401],
                      [ 0.97129731,  0.37729689, -0.95955808, -0.21242964],
                      [ 0.99827437,  0.32743186, -0.95955808, -0.16570966],
                      [ 0.99810184,  0.3443501,  -0.97717636, -0.16783924],
                      [ 0.99919776,  0.35942096, -0.97717636, -0.16783924],
                      [ 0.99647484,  0.46400699, -0.9568649,  -0.17711401]]])
  feed_dict ={x:random_x}
  
  out_bias = graph.get_tensor_by_name("out_bias:0")
  temp_prediction = graph.get_tensor_by_name("temp_prediction:0")
  prediction = temp_prediction + out_bias

  print(sess.run(tf.argmax(prediction, 1), feed_dict))
